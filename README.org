#+title: Inforest

* Propuesta Inicial
La visualizacion ideada en un principio consistia
en una estructura arborea que se bifurcaba a medida
que avanzaba en la estructura de carpetas. Al llegar
a la profundidad maxima se generaria una "hoja" que
poseeria los datos del archivo.
La estructura de este arbol estaba dada por la carpeta
del drive de la materia

[[./imgs/arbol_inicial.png]]

* Desarrollo y Conceptualizacion
Con esta propuesta como base decidimos 
cambiar ciertas partes para que comprendan
una estructura mas amplia que el drive de la materia.

Estos eran los nodos por defecto:
| Profundidad de Nodo | Nombre       |
|---------------------+--------------|
|          1          | Tronco comun |
|          2          | Alumnxs      |
|          3          | Cuatrimestre |
|          4          | Trabajos     |
|          5          | Archivos     |


Los cuales pasarian a ser:
| Profundidad de Nodo | Nombre                           |
|---------------------+----------------------------------|
|          1          | Año de cursada                   |
|          2          | Alumxns                          |
|          3          | Trabajos                         |
|          4          | Archivos*                        |
*Este nodo es opcional, podria representarse de diferentes maneras,
ej; que aumente el tamaño del nodo cuatro cuanto mas archivos tenga (en caso de ser una carpeta)

** Arbol y Bosque
La estrucura de nodos desde la raiz(primer nodo) a la hoja(ultimo nodo) seria un arbol,
multiples arboles formarian un bosque, ej; visualizacion de multiples arboles, la raiz de cada uno
siendo el año de cursada (2018, 2019, 2020).

*** PONER BOSQUE DE LOS TRES AÑOS

** Raiz
El primer nodo y la base del arbol, se dispondria de la capacidad de cambiar de raiz
que produciria un nuevo arbol desde el nodo deseado. Ej; hacer click en unx alumnx
 resultaria que se genere una nueva raiz en base a su nodo

*** PONER IMAGEN DE EJEMPLO
** Hojas y Tags
El ultimo nodo; representa los trabajos de lxs estudiantes, estos tendrian acceso al link del tp
e informacion adicional en la forma de =tags=.
Los tags o etiquetas ayudarian a dar sentido a la informacion y cualquier nodo no visible
se veria representado como tags en las hojas y todo tag podria seleccionarse
conviritendose en un nodo raiz

Es en la relacion de los tags entre si y los parametros que controlan donde yace el potencial
de la generacion de distintos arboles

*** IMAGEN DE TAGS: materia -> trabajos 
** Semillas - filtrado de data
Va a haber informacion que no queramos ver por lo tanto deberiamos ser capaces de filtrar
los trabajos con ciertos tags (o solo ver trabajos de ciertos tags),
la combinacion de estas opciones seria la semilla ya que afecta en la generacion de un nuevo 

* Implementacion
Nosotros implementamos una version simple de esta idea, sin bosques, filtros ni raices seleccionables.
La meta era ver las posibilidades de visualizacion pasando de una base de datos a un grafo web.
Utilizamos la libreria d3 para generar un grafico de arbol con una base de datos pequeña para
ver como se adecua la misma al concepto que estamos trabajando
https://outofnames2.github.io/ESVyPP/

Seria ideal poder adaptarla o devisar una manera de generar arboles mas organicos,
con ramificaciones no tan ordenadas
*** IMAGEN DE DANI
*** OTRA MAS

Un sistema-L parametrizado y/o una tecnica de "colonizacion del espacio" podria servir para conseguir 
una generacion mas organica. 

Unos papers al respecto:
- Sistemas-L Parametricos http://algorithmicbotany.org/papers/hanan.dis1992.pdf
- Colonizacion del Espacio http://algorithmicbotany.org/papers/colonization.egwnp2007.large.pdf
- Sistemas-L (en general) http://algorithmicbotany.org/papers/abop/abop.pdf

* Descripcion del Codigo
** HTML
#+begin_src html :tangle index.html
  <!DOCTYPE html>
  <html>
    <head>
      <meta charset="UTF-8">
      <title> [nombre abierto a sugerencias] </title>
      <link href"style.css" rel="stylesheet" type="text/css">
    </head>
    <div>
      <svg id="graph"></svg>
    </div>
    <div id="tooltip"></div>
    </body>
  </html>

  <script src="https://d3js.org/d3.v6.min.js" charset="utf-8"></script>
  <script src="sketch.js"></script>
#+end_src

** CSS
#+begin_src css :tangle style.css

/*nada que ver aqui*/

#+end_src

** Javascript

*** Definicion de dataset
#+begin_src javascript :tangle sketch.js
  let materias = ["Estructuras Sonoras y Visuales", "Taller de Produccion y Postproduccion"]
  let dataset = {"id": "Año 2020",
		 "children": [
		     {"id": "FALCHETTI Santino",
		      "children": [
			  {"id": "Tp06_T_Recuerdo.pdf"
			   , "archivos": 1
			   , "url": "https://drive.google.com/file/d/15UXdnx74zdXGmwwTVVRGlEQ5fyBBlRb0"
			   , "materia": materias[1]},
			  {"id": "herbario"
			   , "archivos":11,
			   "url": "https://drive.google.com/drive/folders/18n0FqYa1gQBogRD0Ry2PLP1V_LKj08K2"
			   ,"materia": materias[0]}
		      ]},
		     {"id": "ALVAREZ FREIJOMIL Facundo Tomas",
		      "children": [
			  {"id": "Alvarez_Facundo_Tp_08_T_Transformaciones"
			   , "archivos":10
			   , "url": "https://drive.google.com/drive/folders/1163zusXN4K1m_qDq12wKeziZBuw3gB99"
			   , "materia": materias[1]},
			  {"id": "Alvarez_Facundo_Tp04_E_Codex_Vegetal"
			   , "archivos":11
			   , "url": "https://drive.google.com/drive/folders/1XSxkged5u6AD8vV_fPzpO3OXWrDoUMGq"
			   , "materia": materias[0]}
		      ]},
		     {"id": "MEDAN FRANZESE Martin Ignacio",
		      "children": [
			  {"id": "Tp7"
			   ,"archivos":11
			   ,"url": "https://drive.google.com/drive/folders/1its4uymKEchEBWxB2lMKvioEytQ49qOC"
			   ,"materia": materias[1]},
			  {"id": "Tp10"
			   ,"archivos": 1
			   ,"url": "https://drive.google.com/file/d/1Ee2dvwMNiRq0pRr9wmZh96s7uwe1CckK/view"
			   ,"materia": materias[1]}
		      ]},
		     {"id": "AHUMADA Daniel Gerardo",
		      "children": [
			  {"id": "proyecto flash"
			   , "archivos":1
			   , "url":  "https://drive.google.com/file/d/1saur2QY9QH8Y0I7komQMXVXNlDEV3yiZ/view"
			   , "materia": materias[0]},
			  {"id": "TP 6 RECUERDO"
			   , "archivos":18
			   , "url": "https://drive.google.com/drive/folders/1nz5DkGTNDVEyIAN5sm75w9GEoSN7O_KY"
			   , "materia": materias[1]},
			  {"id": "TP3_E_AUTORETRATO"
			   , "archivos":1
			   , "url": "https://drive.google.com/file/d/1F5NvQq7bi_HW0u2SHiyMF4hEEvP2ITnO/view"
			   , "materia": materias[0]}
		      ]}
		 ]};

#+end_src

*** Definicion de parametros y grafo
#+begin_src javascript :tangle sketch.js
  const WIDTH = 800;
  const HEIGHT = 600;
  const margin = {top:0, right: 0, bottom: 70, left: 0};

  const innerWidth = WIDTH - margin.left - margin.right;
  const innerHeight = HEIGHT - margin.top - margin.bottom;

  let tooltip = d3.select("#tooltip")
      .style("position", "absolute")
      .style("visibility", "hidden")
      .style("white-space", "pre-line")

      .style("background-color", "white")
      .style("opacity", "0.7");

  let palette = ["black", "#b20000", "#00cc99"];
  let graph = d3.select("#graph");
  graph = graph
      .attr("viewBox", 
	    `0 0 ${WIDTH + margin.left + margin.right} ${HEIGHT + margin.top + margin.bottom}`)
      .attr("xmlns","http://www.w3.org/2000/svg" )
      .attr("xmlns:xlink","http://www.w3.org/1999/xlink" )
      .style("max-width", WIDTH)
      .style("max-height", HEIGHT)
      .append("g")
      .attr("transform", `translate(${margin.left}, ${margin.top})`);

  const treeLayout = d3.tree().size([innerWidth, innerHeight])
  const root = d3.hierarchy(dataset);
  const links = treeLayout(root).links();
  const linkPaths = d3.linkVertical()
	.x(d => d.x)
	.y(d => HEIGHT - d.y);
#+end_src

*** Modificacion visual del grafo
#+begin_src javascript :tangle sketch.js
  graph.append("g")
      .attr("fill", "none")
      .attr("stroke", "teal")
      .attr("stroke-width", 8)

      .selectAll("path")
      .data(root.descendants())
      .join("path")

      .data(links)
      .attr("d", linkPaths);

  graph.append("g")
      .selectAll("circle")
      .data(root.descendants())
      .join("svg:a").attr("xlink:href", d => d.data.url)
      .append("circle")
      .attr("r", d => d.children ? 20 : 10 + (d.data.archivos * 1.6))
      .attr("transform", d => `translate(${d.x},${HEIGHT - d.y})`)
      .attr("fill", d => palette[d.depth])


      .on("mouseover", (_, d) => {
	  let id = d.data.id,
	      archivos = d.data.archivos,
	      materia = d.data.materia;
	  tooltip.style("visibility", "visible")
	      .text(d.children ? id : `TP: ${id}\n Cantidad de archivos: ${archivos}\n Materia: ${materia}`)
	      .style("font-size", "1.2rem")
	})
      .on("mousemove", (_, d) => {
	    let x = event.pageX,
		y = event.pageY;
	    tooltip
		.style("top", (y-10)+"px")
		.style("left",(x+10)+"px")
	})
      .on("mouseout", () => tooltip.style("visibility", "hidden"));

#+end_src
